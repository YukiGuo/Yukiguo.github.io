<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>郭郭的博客</title>
    <link>http://example.org/</link>
    <description>Recent content on 郭郭的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <lastBuildDate>Mon, 09 Sep 2019 21:26:03 +0800</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Javascript入门</title>
      <link>http://example.org/posts/javascript%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 09 Sep 2019 21:26:03 +0800</pubDate>
      
      <guid>http://example.org/posts/javascript%E5%85%A5%E9%97%A8/</guid>
      <description>1.表达式 1 + 3叫做表达式（expression），指一个为了得到返回值的计算式
2.语句 语句（statement）是为了完成某种任务而进行的操作，例如一行赋值语句。语句和表达式的区别在于，前者主要为了进行某种操作，一般情况下不需要返回值；后者则是为了得到返回值，一定会返回一个值。
3.大小写敏感 4.空格 没有实际意义，不影响断句即可 5.回车 大部分没有意义，但是return 后面不可以加回车，否则会返回undefined 6.标识符  第一个字母：Unicode 编码字母，$ 或 _ 或中文 第二个字母：上面所有内容和数字  7.注释 : // &amp;mdash;&amp;mdash;单行注释 ； /* */ &amp;mdash;&amp;mdash;多行注释  踩坑注释 为什么代码会写得这么奇怪，遇到了什么bug  8.区块 block 被大括号包裹的多行代码{ }通常与if,for,while联合使用 9.if语句 &amp;mdash;&amp;mdash; if (表达式){语句1}else{语句2}  { } 在语句只有一句时可以省略，但是不推荐，无{ }的只执行到第一句代码结束(逗号隔开的也为一个语句) if 表达式可以为(a=1)，但是这样会改变a的值。判断建议使用(a===1) 语句1 和语句2 都可以嵌套
//语句1嵌套，并且省略了{ } var a=9 if (a&amp;lt;100&amp;gt;) if (1&amp;lt;10&amp;gt;) console.log(&amp;#39;a&amp;lt;10&amp;#39;) 成立 //语句2 嵌套 if(a&amp;gt;100){ }else{ if (a&amp;lt;10&amp;gt;){ console.log(&amp;#39;a&amp;lt;10&amp;#39;) } } //语句2 嵌套省略{ } if(a&amp;gt;100){ }else if (a&amp;lt;10&amp;gt;){ console.</description>
    </item>
    
    <item>
      <title>Javascript历史</title>
      <link>http://example.org/posts/javascript%E5%8E%86%E5%8F%B2/</link>
      <pubDate>Mon, 09 Sep 2019 21:26:03 +0800</pubDate>
      
      <guid>http://example.org/posts/javascript%E5%8E%86%E5%8F%B2/</guid>
      <description>1994年，一家名为Mosaic Netscape 发布，四个月内发展成为1990年代互联网的主要浏览器，同年更名为Netscape Navigator(网景),1995招募了布兰登·艾克，决定发明一种与Java搭配使用的辅助脚本语言并且语法上有些类似，艾克仅花了十天时间设计了原型。最初命名为Mocha，然后改名为LiveScript，后为了跟随Java的热潮 更改JavaScript。
浏览器之争 JavaScript推出后在浏览器上大获成功，1996年 6月 IE3浏览器推出了JScript， 和JS处于同台竞争，这两个JavaScript语言版本在浏览器端共存意味着语言标准化的缺失，96年11月，网景正式向ECMA（欧洲计算机制造商协会）提交语言标准，随后便制定了ECMAScript标准规范。 微软继续发出反击，在Windows 系统中捆绑了IE浏览器，市场份额很快超过了网景，网景节节败退，并将浏览器开源，但是并没有太大作用，不久就被收购。随后IE浏览器便一家独大，发展到了2001年 Windows Xp IE6一同发布 到2004年全球的市场占有率高达80%以上，但是由于不兼容W3c标准，为大多数开发者所诟病。Firefox 准备涅槃重生，2006成为了主流的浏览器，但是市场份额仍然不敌IE6。2004年谷歌抓住机会，着手研发浏览器，2008年正式发布，到2016年全球份额超过62%，取得了巨大的成功。后期随着移动市场的兴起，手机上不在支持IE，2018年12月6日，微软正式宣布桌面版Edge浏览器将采用Chromium内核，并将支持所有受支持的Windows版本以及macOS等平台， 随着智能手机的发布
ECMAScript 标准历史 1997年7月6日 第一版 ECMAScript发布，1999年12月第三版发布（使用最为广泛的版本），第四版流产，2009年12月 第五版， 2015年6月 第六版发布
Javascript的兴起 2004年谷歌发布在线Gmail,这使得开发者和用户眼前一亮，2005年谷歌Gmail 运用到的技术被命名为AJAX，前端技术真正出现
Javascript的爆发 Chrome 的 V8 引擎极大的提升了 JS 代码的运行效率。直接导致了 Node.js / npm 等基础的出生，前端工程化成为可能。之后 Express 出现，JS 开发者可以开始愉快进行后端开发。再之后大量新技术蓬勃发展。</description>
    </item>
    
    <item>
      <title>HTTP入门</title>
      <link>http://example.org/posts/http%E5%85%A5%E9%97%A8/</link>
      <pubDate>Fri, 30 Aug 2019 21:29:47 +0800</pubDate>
      
      <guid>http://example.org/posts/http%E5%85%A5%E9%97%A8/</guid>
      <description>一、IP Internet Protocol 网际协议 1. 两个作用：  如何定位设备 封装数据报文，以跟其他设备交流  2. 内网&amp;amp;外网  内网和外网通过路由器连接 内网的设备可以互相访问，但是不能访问外网 内网和外网是两个隔绝的空间，只有通过路由器才能互通 外网的设备可以相互访问但是无法访问你的内网  3. 特殊的Ip  127.0.01 表示自己 localhost 也表示自己 区别是可以通过C盘hosts文件更改 0.0.0.0 不表示任何设备  4. port 端口 总计 共有65535个端口  HTTP : 80端口 HTTPS : 443 端口 FTP : 21 端口  5. IP和域名的对应关系  一个域名可以对应不同的端口 &amp;mdash;&amp;ndash;负载均衡 一个IP可以对应不同的域名 &amp;mdash;&amp;mdash;共享主机  6.域名  域名是由一串用点分隔的字符组成的互联网上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位。域名可以说是一个IP地址的代称，目的是为了便于记忆后者 DNS(Domain Name System): 连接域名和IP
 浏览器向DNS服务器询问xiedaimala.com对应的IP DNS 回复一个IP 浏览器再向对应的IP端口，80/443发送请求 请求内容是查看 xiedaimala.com的首页  域名层次 ：域名名由一或多个部分组成，这些部分通常连接在一起，并由点分隔，一个域名的层次结构，从右侧到左侧隔一个点依次下降一层。</description>
    </item>
    
    <item>
      <title>CSS布局</title>
      <link>http://example.org/posts/css%E5%B8%83%E5%B1%80/</link>
      <pubDate>Sun, 25 Aug 2019 12:57:09 +0800</pubDate>
      
      <guid>http://example.org/posts/css%E5%B8%83%E5%B1%80/</guid>
      <description>兼容性 gird 布局&amp;gt;flex 布局&amp;gt; float布局 固定宽度布局 不固定宽度布局 float布局(专门为IE定制的布局)  子元素：float:left 和width(最后一个子元素可以不设置宽度会根据内容自动，可以加一个max-width) 父元素：.clearfix::after{ content:&amp;ldquo;; display:inline-block; clear:both; } IE 6 &amp;amp; 7存在双倍margin bug 解决方法:
margin-left:10px;_margin-left:5px;
或者设置：display：block；
响应式布局  flex 布局  container  display:flex | inline-flex; flex-direction:row |column |row-reverse |column-reverse; flex-wrap:nowrap|wrap; justify-content:flex-start|flex-end|center|space-between|space-around|space-evenly; 主轴对齐方式 align-items:stretch|flex-start|flex-end|center; 次轴对齐方式 align-content:stretch|flex-start|flex-end|center|space-between|space-around 主轴多行对齐方式     items  order:num; item的显示顺序按照order从小到大显示，默认为0 flex-grow:num ; 每个item占据的空间，数字越大，空间越大 flex-shrink: num 空间不够时，数字越大，缩小的程度越大，为0时表示不会被缩小 align-self: stretch|flex-start|flex-end|center *单个item的对齐方式 *   gird 布局 小技巧 img 标签 添加背景颜色后有多余的东西，可以用vertical-align:top/middle</description>
    </item>
    
    <item>
      <title>hugo个人博客搭建</title>
      <link>http://example.org/posts/hugo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Sun, 18 Aug 2019 15:56:52 +0800</pubDate>
      
      <guid>http://example.org/posts/hugo-%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</guid>
      <description>安装Hugo 创建目录：id.github.io-creator hugo new site id.github.io-creator 设置主题
$ cd id.github.io-creator $ git init $ git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke $ echo &amp;#39;theme = &amp;#34;ananke&amp;#34;&amp;#39; &amp;gt;&amp;gt; config.toml 添加第一篇博文
$ hugo new posts/my-first-post.md $ hugo server -D 创建静态页面
 在当前目录创建了一个public文件夹,新建 .gitignore文并,内容填写public， 并将public单独创建创建本地仓库并且上传github
$ hugo $ cd public $ git init $ git add . $ git commit -m &amp;#34;开博啦&amp;#34; $ github页面新建仓库 命名为 id.github.io $ git remote add origin ssh $ git push -u origin master  github设置 :setting &amp;ndash;GitHub Pages &amp;mdash;master branch ,后面显示的地址则是博客的静态地址</description>
    </item>
    
    <item>
      <title>HTML常用标签</title>
      <link>http://example.org/posts/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Fri, 16 Aug 2019 18:56:52 +0800</pubDate>
      
      <guid>http://example.org/posts/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      <description>一、 a标签 1. href 属性  网页链接:有三种方式 1.https://www.baidu.com/ 2. https//www.baidu.com/ 3. baidu.com 路径:绝对路径（httpserver所在目录为根目录），如果是双击打开的网页则是计算机根目录相对路径 伪协议：  javascript:+代码+;点击后触发执行js代码, 如果此处代码为空，会则不做任何操作。href=&amp;ldquo;#&amp;ldquo;时会跳转到页面顶部，herf=&amp;rdquo;&amp;ldquo;时会刷新页面 href=&amp;ldquo;#xxx&amp;rdquo; xxx表示id,跳转到当前页面id为xxx的地方 href=&amp;ldquo;mailto:xxx@email.com&amp;rdquo; href=&amp;ldquo;tel:188xxxxx&amp;rdquo;   2. target 指定打开新连接页面的窗口  _self 当前页面打开 _blank 新建窗口打开 _top 最外层打开页面，针对html框架iframe网页 parent 父级打开网页，针对html框架iframe网页中，整个网页将重新载入打开目标网址地址 xxx 在一个自定义窗口打开页面  3. download 点击下载页面,一般不用 4. rel = noopener 二、 table 表格标签 1.table标签： table, thead, tbody, tr (table row), th( table head),td(table data)
2. table CSS样式:  表格宽度table-layout:fixed,auto 边框合并,border-collapse :collapse 文字对齐: text-align, vertical-align 表格内边距:th &amp;amp; td padding   三、 img图片标签  常用属性：height width src alt</description>
    </item>
    
    <item>
      <title>HTML入门笔记1</title>
      <link>http://example.org/posts/html%E5%85%A5%E9%97%A8/</link>
      <pubDate>Thu, 15 Aug 2019 18:56:52 +0800</pubDate>
      
      <guid>http://example.org/posts/html%E5%85%A5%E9%97%A8/</guid>
      <description> 一、HTML简介 全称为 HyperText Markup Language 是一种超文本标记语言，最初由Tim Berners-Lee 发明，现在已经更新到HTML5
二、Html 起手式 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;!--声明文档类型--&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;!--声明语言，中文zh-cn--&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;!--可以用于世界上所有语言编码--&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;ie=edge&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 三、HTML章节标签  标题标签: h1-h6 章节标签: section 文章标签: article 段落标签: p 旁支标签: aside 头部标签: header 主要内容: main 脚部标签: footer 其它: div  四、标签的全局属性  id HTML元素的唯一的 id ,但是如果出现两个，也不会报错，如果id=&amp;lsquo;xxx&amp;rsquo;,js可以通过 直接调用，如果id名同window的全局属性则不可调用 class contenteditable 为true时表示用户可以编辑该内容 hidden style 优先级: Js样式 &amp;gt; 内联样式 &amp;gt; css 样式 tabindex 通过鼠标tab健访问网页时的顺序，可以不按照顺序，为0时表示最后一个，为-1时表示不会被访问到 title 鼠标移到元素上时显示一段文本  五、内容标签  ol + li &amp;mdash;-orderlist item ul + li &amp;mdash;-unorderlist item dl + dt + dd &amp;mdash;-descriptionlist pre html一般情况下多个空格，tab健，回车均显示一个空格，如果想要全部显示则可加上这个标签 hr 分割线 code 编码等宽字体 hr分割线 br 换行 em 强调内容 strong 重要内容 内联引用 quote 块级引用blockquote a 超链接 属性有 href target  </description>
    </item>
    
    <item>
      <title>开博大吉</title>
      <link>http://example.org/posts/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</link>
      <pubDate>Wed, 14 Aug 2019 18:56:52 +0800</pubDate>
      
      <guid>http://example.org/posts/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</guid>
      <description> hello 大家好，这里是小郭同学~ 我的目标：通过这个课程达到初级前端的程度，找到一份合适的工作。 我的兴趣爱好是:  听音乐 看电影 羽毛球 游泳（学习ing&amp;hellip;）
我的日常： 上班
 学习
  这里是一些代码的演示HTML CSS Javascript
Html &amp;lt;div&amp;gt; &amp;lt;p&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; Css *{ margin:0 padding:0 } Javascript console.log(&amp;#34;看这里&amp;#34;) </description>
    </item>
    
  </channel>
</rss>